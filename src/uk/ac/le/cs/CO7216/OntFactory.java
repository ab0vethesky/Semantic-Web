package uk.ac.le.cs.CO7216;

import uk.ac.le.cs.CO7216.impl.*;


import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: OntFactory<br>
 * @version generated on Fri Apr 29 11:51:19 WAT 2016 by Tara
 */
public class OntFactory implements CodeGenerationFactory {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;
    private CodeGenerationInference inference;

    public OntFactory(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public OntFactory(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        this.inference = inference;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
    
    public void saveOwlOntology() throws OWLOntologyStorageException {
        ontology.getOWLOntologyManager().saveOntology(ontology);
    }
    
    public void flushOwlReasoner() {
        delegate.flushOwlReasoner();
    }
    
    public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
    	return javaMapping.canAs(resource, javaInterface);
    }
    
    public  <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
    	return javaMapping.as(resource, javaInterface);
    }
    
    public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
        return javaMapping.getJavaInterfaceFromOwlClass(cls);
    }
    
    public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
	    return javaMapping.getOwlClassFromJavaInterface(javaInterface);
    }
    
    public CodeGenerationInference getInference() {
        return inference;
    }

    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Country
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Country", Country.class, DefaultCountry.class);
    }

    /**
     * Creates an instance of type Country.  Modifies the underlying ontology.
     */
    public Country createCountry(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_COUNTRY, DefaultCountry.class);
    }

    /**
     * Gets an instance of type Country with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Country getCountry(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_COUNTRY, DefaultCountry.class);
    }

    /**
     * Gets all instances of Country from the ontology.
     */
    public Collection<? extends Country> getAllCountryInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_COUNTRY, DefaultCountry.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Democratic
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Democratic", Democratic.class, DefaultDemocratic.class);
    }

    /**
     * Creates an instance of type Democratic.  Modifies the underlying ontology.
     */
    public Democratic createDemocratic(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DEMOCRATIC, DefaultDemocratic.class);
    }

    /**
     * Gets an instance of type Democratic with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Democratic getDemocratic(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DEMOCRATIC, DefaultDemocratic.class);
    }

    /**
     * Gets all instances of Democratic from the ontology.
     */
    public Collection<? extends Democratic> getAllDemocraticInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DEMOCRATIC, DefaultDemocratic.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Dictactorship
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Dictactorship", Dictactorship.class, DefaultDictactorship.class);
    }

    /**
     * Creates an instance of type Dictactorship.  Modifies the underlying ontology.
     */
    public Dictactorship createDictactorship(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DICTACTORSHIP, DefaultDictactorship.class);
    }

    /**
     * Gets an instance of type Dictactorship with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Dictactorship getDictactorship(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DICTACTORSHIP, DefaultDictactorship.class);
    }

    /**
     * Gets all instances of Dictactorship from the ontology.
     */
    public Collection<? extends Dictactorship> getAllDictactorshipInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DICTACTORSHIP, DefaultDictactorship.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Economic_Block
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Economic_Block", Economic_Block.class, DefaultEconomic_Block.class);
    }

    /**
     * Creates an instance of type Economic_Block.  Modifies the underlying ontology.
     */
    public Economic_Block createEconomic_Block(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ECONOMIC_BLOCK, DefaultEconomic_Block.class);
    }

    /**
     * Gets an instance of type Economic_Block with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Economic_Block getEconomic_Block(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ECONOMIC_BLOCK, DefaultEconomic_Block.class);
    }

    /**
     * Gets all instances of Economic_Block from the ontology.
     */
    public Collection<? extends Economic_Block> getAllEconomic_BlockInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ECONOMIC_BLOCK, DefaultEconomic_Block.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Economic_System
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Economic_System", Economic_System.class, DefaultEconomic_System.class);
    }

    /**
     * Creates an instance of type Economic_System.  Modifies the underlying ontology.
     */
    public Economic_System createEconomic_System(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ECONOMIC_SYSTEM, DefaultEconomic_System.class);
    }

    /**
     * Gets an instance of type Economic_System with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Economic_System getEconomic_System(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ECONOMIC_SYSTEM, DefaultEconomic_System.class);
    }

    /**
     * Gets all instances of Economic_System from the ontology.
     */
    public Collection<? extends Economic_System> getAllEconomic_SystemInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ECONOMIC_SYSTEM, DefaultEconomic_System.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Export_Partner
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Export_Partner", Export_Partner.class, DefaultExport_Partner.class);
    }

    /**
     * Creates an instance of type Export_Partner.  Modifies the underlying ontology.
     */
    public Export_Partner createExport_Partner(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EXPORT_PARTNER, DefaultExport_Partner.class);
    }

    /**
     * Gets an instance of type Export_Partner with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Export_Partner getExport_Partner(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EXPORT_PARTNER, DefaultExport_Partner.class);
    }

    /**
     * Gets all instances of Export_Partner from the ontology.
     */
    public Collection<? extends Export_Partner> getAllExport_PartnerInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EXPORT_PARTNER, DefaultExport_Partner.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#GDP
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#GDP", GDP.class, DefaultGDP.class);
    }

    /**
     * Creates an instance of type GDP.  Modifies the underlying ontology.
     */
    public GDP createGDP(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_GDP, DefaultGDP.class);
    }

    /**
     * Gets an instance of type GDP with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public GDP getGDP(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_GDP, DefaultGDP.class);
    }

    /**
     * Gets all instances of GDP from the ontology.
     */
    public Collection<? extends GDP> getAllGDPInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_GDP, DefaultGDP.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Geographic_Region
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Geographic_Region", Geographic_Region.class, DefaultGeographic_Region.class);
    }

    /**
     * Creates an instance of type Geographic_Region.  Modifies the underlying ontology.
     */
    public Geographic_Region createGeographic_Region(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_GEOGRAPHIC_REGION, DefaultGeographic_Region.class);
    }

    /**
     * Gets an instance of type Geographic_Region with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Geographic_Region getGeographic_Region(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_GEOGRAPHIC_REGION, DefaultGeographic_Region.class);
    }

    /**
     * Gets all instances of Geographic_Region from the ontology.
     */
    public Collection<? extends Geographic_Region> getAllGeographic_RegionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_GEOGRAPHIC_REGION, DefaultGeographic_Region.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Government_Type
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Government_Type", Government_Type.class, DefaultGovernment_Type.class);
    }

    /**
     * Creates an instance of type Government_Type.  Modifies the underlying ontology.
     */
    public Government_Type createGovernment_Type(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_GOVERNMENT_TYPE, DefaultGovernment_Type.class);
    }

    /**
     * Gets an instance of type Government_Type with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Government_Type getGovernment_Type(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_GOVERNMENT_TYPE, DefaultGovernment_Type.class);
    }

    /**
     * Gets all instances of Government_Type from the ontology.
     */
    public Collection<? extends Government_Type> getAllGovernment_TypeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_GOVERNMENT_TYPE, DefaultGovernment_Type.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Group
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Group", Group.class, DefaultGroup.class);
    }

    /**
     * Creates an instance of type Group.  Modifies the underlying ontology.
     */
    public Group createGroup(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_GROUP, DefaultGroup.class);
    }

    /**
     * Gets an instance of type Group with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Group getGroup(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_GROUP, DefaultGroup.class);
    }

    /**
     * Gets all instances of Group from the ontology.
     */
    public Collection<? extends Group> getAllGroupInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_GROUP, DefaultGroup.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Import_Partner
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Import_Partner", Import_Partner.class, DefaultImport_Partner.class);
    }

    /**
     * Creates an instance of type Import_Partner.  Modifies the underlying ontology.
     */
    public Import_Partner createImport_Partner(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_IMPORT_PARTNER, DefaultImport_Partner.class);
    }

    /**
     * Gets an instance of type Import_Partner with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Import_Partner getImport_Partner(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_IMPORT_PARTNER, DefaultImport_Partner.class);
    }

    /**
     * Gets all instances of Import_Partner from the ontology.
     */
    public Collection<? extends Import_Partner> getAllImport_PartnerInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_IMPORT_PARTNER, DefaultImport_Partner.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Monarchy
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Monarchy", Monarchy.class, DefaultMonarchy.class);
    }

    /**
     * Creates an instance of type Monarchy.  Modifies the underlying ontology.
     */
    public Monarchy createMonarchy(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MONARCHY, DefaultMonarchy.class);
    }

    /**
     * Gets an instance of type Monarchy with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Monarchy getMonarchy(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MONARCHY, DefaultMonarchy.class);
    }

    /**
     * Gets all instances of Monarchy from the ontology.
     */
    public Collection<? extends Monarchy> getAllMonarchyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MONARCHY, DefaultMonarchy.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Official_Language
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Official_Language", Official_Language.class, DefaultOfficial_Language.class);
    }

    /**
     * Creates an instance of type Official_Language.  Modifies the underlying ontology.
     */
    public Official_Language createOfficial_Language(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OFFICIAL_LANGUAGE, DefaultOfficial_Language.class);
    }

    /**
     * Gets an instance of type Official_Language with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Official_Language getOfficial_Language(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OFFICIAL_LANGUAGE, DefaultOfficial_Language.class);
    }

    /**
     * Gets all instances of Official_Language from the ontology.
     */
    public Collection<? extends Official_Language> getAllOfficial_LanguageInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OFFICIAL_LANGUAGE, DefaultOfficial_Language.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Partner
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Partner", Partner.class, DefaultPartner.class);
    }

    /**
     * Creates an instance of type Partner.  Modifies the underlying ontology.
     */
    public Partner createPartner(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PARTNER, DefaultPartner.class);
    }

    /**
     * Gets an instance of type Partner with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Partner getPartner(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PARTNER, DefaultPartner.class);
    }

    /**
     * Gets all instances of Partner from the ontology.
     */
    public Collection<? extends Partner> getAllPartnerInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PARTNER, DefaultPartner.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Yearly_GDP_Percent
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Yearly_GDP_Percent", Yearly_GDP_Percent.class, DefaultYearly_GDP_Percent.class);
    }

    /**
     * Creates an instance of type Yearly_GDP_Percent.  Modifies the underlying ontology.
     */
    public Yearly_GDP_Percent createYearly_GDP_Percent(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_YEARLY_GDP_PERCENT, DefaultYearly_GDP_Percent.class);
    }

    /**
     * Gets an instance of type Yearly_GDP_Percent with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Yearly_GDP_Percent getYearly_GDP_Percent(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_YEARLY_GDP_PERCENT, DefaultYearly_GDP_Percent.class);
    }

    /**
     * Gets all instances of Yearly_GDP_Percent from the ontology.
     */
    public Collection<? extends Yearly_GDP_Percent> getAllYearly_GDP_PercentInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_YEARLY_GDP_PERCENT, DefaultYearly_GDP_Percent.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/CountryEconomicAspects.owl#Yearly_GDP_Value
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/CountryEconomicAspects.owl#Yearly_GDP_Value", Yearly_GDP_Value.class, DefaultYearly_GDP_Value.class);
    }

    /**
     * Creates an instance of type Yearly_GDP_Value.  Modifies the underlying ontology.
     */
    public Yearly_GDP_Value createYearly_GDP_Value(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_YEARLY_GDP_VALUE, DefaultYearly_GDP_Value.class);
    }

    /**
     * Gets an instance of type Yearly_GDP_Value with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Yearly_GDP_Value getYearly_GDP_Value(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_YEARLY_GDP_VALUE, DefaultYearly_GDP_Value.class);
    }

    /**
     * Gets all instances of Yearly_GDP_Value from the ontology.
     */
    public Collection<? extends Yearly_GDP_Value> getAllYearly_GDP_ValueInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_YEARLY_GDP_VALUE, DefaultYearly_GDP_Value.class);
    }


}
